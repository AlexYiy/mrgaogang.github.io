(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{171:function(t,a,n){t.exports=n.p+"assets/img/move.1cbbf7c8.png"},172:function(t,a,n){t.exports=n.p+"assets/img/self-cell.e5441828.png"},214:function(t,a,n){t.exports=n.p+"assets/img/table.ea35a79c.png"},215:function(t,a,n){t.exports=n.p+"assets/img/cell.8a034f2c.png"},216:function(t,a,n){t.exports=n.p+"assets/img/index.df1bac47.png"},217:function(t,a,n){t.exports=n.p+"assets/img/cell-preview.022b078b.png"},303:function(t,a,n){"use strict";n.r(a);var s=n(17),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("IOS 的 TableView 的主要作用是做列表或者表格的，其功能类似于 Android 的 RecyclerView；")]),t._v(" "),s("h2",{attrs:{id:"一、tableview-的基础知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、tableview-的基础知识"}},[t._v("#")]),t._v(" 一、TableView 的基础知识")]),t._v(" "),s("h3",{attrs:{id:"_1-tableview-简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-tableview-简介"}},[t._v("#")]),t._v(" 1. TableView 简介")]),t._v(" "),s("p",[s("img",{attrs:{src:n(214),alt:""}}),t._v("\nUITableView 主要包括如下几个部分：")]),t._v(" "),s("ul",[s("li",[t._v("头部视图：Header View")]),t._v(" "),s("li",[t._v("底部视图：Footer View")]),t._v(" "),s("li",[t._v("多个 Section\n"),s("ul",[s("li",[t._v("每一个 Section 包含多个 Cell")]),t._v(" "),s("li",[t._v("包含 Section 头部")]),t._v(" "),s("li",[t._v("包含 Section 底部")])])])]),t._v(" "),s("h3",{attrs:{id:"_3-uitableviewcell-的四种样式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-uitableviewcell-的四种样式"}},[t._v("#")]),t._v(" 3. UITableViewCell 的四种样式")]),t._v(" "),s("p",[s("img",{attrs:{src:n(215),alt:""}})]),t._v(" "),s("h3",{attrs:{id:"_2-uitableviewcell-重用原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-uitableviewcell-重用原理"}},[t._v("#")]),t._v(" 2. UITableViewCell 重用原理")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("Cell 的重用原理")])]),t._v(" "),s("blockquote",[s("p",[t._v("IOS 设备的内存有限.如果用 UITobleView 显示成千上万条数裾，就需要成千上万个\nUITableViewCell 对 ft 的话，将会耗尽 iOS 设条的内存•要解决该问题，需要靈用\nUITobleViewCell 对象")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("重用原理")])])])]),t._v(" "),s("p",[t._v("当滚动列表时,部分 "),s("code",[t._v("UITableViewCell")]),t._v(" 会移出窗口, UITableView 会将窗口\n外的 "),s("code",[t._v("UITableViewCell")]),t._v(" 放入一个对象池中; 等待重用,当 "),s("code",[t._v("UITableView")]),t._v(" 要求 "),s("code",[t._v("dataSource")]),t._v("\n返回 "),s("code",[t._v("UITabteViewCell")]),t._v(" 时； "),s("code",[t._v("dataSource")]),t._v(" 会先蛮看这个对象地，如果池中有未使用的\n"),s("code",[t._v("UITableViewCell")]),t._v(", "),s("code",[t._v("dataSource")]),t._v(" 会用新的数据配置这个 "),s("code",[t._v("UITableViewCell")]),t._v(",然后返回铪\n"),s("code",[t._v("UITableView")]),t._v(",重新显示到窗口中，从而邂免创建新对象。")]),t._v(" "),s("blockquote",[s("p",[t._v('还有一个非常重要的问题:有时候需要自定义 UITableViewCel(用一个子类继承，UITableViewCel)，而且每一行用的不一定是同一种 UITableViewCell,"所以一个 UITableView 可能拥有不同类型的 UlTableViewCell,对象池中也会有很多不同类型的 UITableViewCell,,那么 UlTableView 在重用 UITableViewCell 时可能会得到错误类型的 UITableViewCell')])]),t._v(" "),s("p",[s("strong",[t._v("解决方案:")])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("UIITableViewCell")]),t._v(" 有 个 "),s("code",[t._v("NSString")]),t._v(" "),s("code",[t._v("reuseldentifier")]),t._v(" 属性，可以在初始化"),s("code",[t._v("UITableViewCell")]),t._v(" 的时候传入一个特定的字符串标识来设置 "),s("code",[t._v("reuseldentifier")]),t._v("(一般用"),s("code",[t._v("UITableViewCel")]),t._v(" 的类名)。当 UTableView 要求 "),s("code",[t._v("dataSource")]),t._v(" 返回 "),s("code",[t._v("UITableViewCell")]),t._v(" 时，先通过一个字符串标识到对象池中查找对应类型的 "),s("code",[t._v("UITableViewCell")]),t._v(" 对象，如果有，就重用，如果没有，就传入这个字符串标识来初始化一个 "),s("code",[t._v("UITableViewCell")]),t._v(" 对象")])]),t._v(" "),s("h2",{attrs:{id:"二、tableview-的基础使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、tableview-的基础使用"}},[t._v("#")]),t._v(" 二、TableView 的基础使用")]),t._v(" "),s("p",[t._v("要想"),s("code",[t._v("TableView")]),t._v("展示数据，首先必须的实现"),s("code",[t._v("TableView")]),t._v("的数据源方法，且实现 "),s("code",[t._v("UITableViewDataSource")]),t._v(";")]),t._v(" "),s("div",{staticClass:"language-objc extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\n@interface ViewController ()<UITableViewDataSource,UITableViewDelegate>\n- (IBAction)addDataBtn:(id)sender;\n@property (weak, nonatomic) IBOutlet UITableView *tabelView;\n@property (strong, nonatomic) NSMutableArray *data;\n@end\n\n")])])]),s("p",[t._v("由于本例子想要展示一个列表，所以需要给"),s("code",[t._v("TableView")]),t._v("提供一个数组的数据源：")]),t._v(" "),s("div",{staticClass:"language-objc extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('- (void)viewDidLoad {\n    [super viewDidLoad];\n    // Do any additional setup after loading the view.\n    // 一定要记得给tableView设置数据源\n    self.tabelView.dataSource=self;\n    // mock 列表数据\n    NSArray *array=@[@"iphone-1",@"iphone-2",@"iphone-3",@"iphone-4",@"iphone-5",@"iphone-6",@"iphone-7",@"iphone-8",@"iphone-9",@"iphone-10",@"iphone-11",@"iphone-12",@"iphone-13",@"iphone-14",@"iphone-15",@"iphone-16"];\n    // 设置可变数组\n    self.data= [NSMutableArray arrayWithArray: array];\n}\n\n')])])]),s("h3",{attrs:{id:"_1-设置每行展示及行数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-设置每行展示及行数"}},[t._v("#")]),t._v(" 1. 设置每行展示及行数")]),t._v(" "),s("p",[t._v("要想"),s("code",[t._v("TableView")]),t._v("展示数据，必须要实现的几个方法：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("numberOfSectionsInTableView")]),t._v(" 设置"),s("code",[t._v("TableView")]),t._v("展示多少组；前面基础知识已经讲到一个"),s("code",[t._v("TableView")]),t._v("是包含多组，一组又包含多行的；此处由于案例是展示一个列表，所以下方的代码返回的是 1;")]),t._v(" "),s("li",[s("code",[t._v("numberOfRowsInSection")]),t._v("设置"),s("code",[t._v("TableView")]),t._v("展示多少行")]),t._v(" "),s("li",[s("code",[t._v("cellForRowAtIndexPath")]),t._v(" 设置每一行展示的内容是什么，每一行展示的内容其实包裹在 TableViewCell 中的 ContentView 中")])]),t._v(" "),s("p",[t._v("针对 TableView 中的每一行数据")]),t._v(" "),s("div",{staticClass:"language-objc extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('// 每行显示的内容是什么\n- (nonnull UITableViewCell *)tableView:(nonnull UITableView *)tableView cellForRowAtIndexPath:(nonnull NSIndexPath *)indexPath {\n    // 从重用池中查找对应的cell\n    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier: @"ABC"];\n    if(cell == nil){\n        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier:@"ABC"];\n    }\n\n    cell.textLabel.text=self.data[indexPath.row];\n    cell.imageView.image =[UIImage imageNamed: @"iconHeader.png"];\n    cell.detailTextLabel.text=@"我是子标题";\n    cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;\n    return cell;\n}\n\n// 一组中有多少行\n- (NSInteger)tableView:(nonnull UITableView *)tableView numberOfRowsInSection:(NSInteger)section {\n    return self.data.count;\n}\n\n// 有多少组\n- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{\n    return 1;\n}\n\n')])])]),s("h3",{attrs:{id:"_2-处理列表的点击事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-处理列表的点击事件"}},[t._v("#")]),t._v(" 2. 处理列表的点击事件")]),t._v(" "),s("p",[t._v("想要处理列表的点击实现，首先必须的继承自 tableview 的代理 "),s("code",[t._v("UITableViewDelegate")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-objc extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("@interface ViewController ()<UITableViewDataSource,UITableViewDelegate>\n\n@end\n\n")])])]),s("p",[t._v("并在初始化的时候设置 tableview 的代理:")]),t._v(" "),s("div",{staticClass:"language-objc extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("- (void)viewDidLoad {\n    [super viewDidLoad];\n    // Do any additional setup after loading the view.\n    self.tabelView.delegate =self;\n}\n")])])]),s("p",[t._v("设置完成代理之后即可实现代理中的方法:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("didSelectRowAtIndexPath")]),t._v("就是每行点击将会触发的方法")])]),t._v(" "),s("div",{staticClass:"language-objc extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('// 代理方法，最常用的，处理点击事件\n- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{\n    NSString *str= self.data[indexPath.row];\n    NSLog(@"%@",str);\n}\n')])])]),s("h3",{attrs:{id:"_3-左滑删除某一行的数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-左滑删除某一行的数据"}},[t._v("#")]),t._v(" 3. 左滑删除某一行的数据")]),t._v(" "),s("p",[t._v("要想删除某一行的数据，必须的实现如下几个代理方法：（如何设置并实现代理请见"),s("code",[t._v("处理列表的点击事件")]),t._v("）")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("canEditRowAtIndexPath")]),t._v("设置改行能不能编辑")]),t._v(" "),s("li",[s("code",[t._v("commitEditingStyle")]),t._v(" 设置数据更改之后需要提交，仅仅实现了此方法就可以展示出删除按钮了")]),t._v(" "),s("li",[s("code",[t._v("titleForDeleteConfirmationButtonForRowAtIndexPath")]),t._v(" 设置删除按钮的文字")])]),t._v(" "),s("div",{staticClass:"language-objc extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('\n// 左滑删除操作的需要实现的几个方法\n\n// 1. 该行能不能编辑\n- (BOOL)tableView:(UITableView *)tableView canEditRowAtIndexPath:(NSIndexPath *)indexPath{\n    return YES;\n}\n\n// 2. 提交编辑，仅仅实现了此方法就可以展示出删除按钮了\n\n- (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath{\n    // 一定要记得判断编辑的类型，如果编辑的类型为删除，则删除数据源和对应的列\n    if(editingStyle == UITableViewCellEditingStyleDelete){\n        //    以下两个语句不能换顺序，必须先删除数据源中的数据，再删除本行的数据\n        //    删除对应数据源中的方法\n        [self.data removeObjectAtIndex: indexPath.row];\n\n        //    删除界面上的，对应一行\n        [tableView deleteRowsAtIndexPaths: @[indexPath] withRowAnimation:UITableViewRowAnimationFade];\n    }\n\n}\n\n// 3. 设置删除按钮的文字\n\n- (NSString *)tableView:(UITableView *)tableView titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)indexPath{\n    return @"删除";\n}\n\n')])])]),s("h3",{attrs:{id:"_4-新增数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-新增数据"}},[t._v("#")]),t._v(" 4. 新增数据")]),t._v(" "),s("p",[s("img",{attrs:{src:n(171),alt:""}})]),t._v(" "),s("p",[t._v("新增一条数据和删除一条数据的整体思路是类似的：")]),t._v(" "),s("ol",[s("li",[t._v("也必须实现 "),s("code",[t._v("canEditRowAtIndexPath")]),t._v(" 且返回 YES，表示该行可以被编辑")]),t._v(" "),s("li",[t._v("必须让"),s("code",[t._v("tableview")]),t._v("处于编辑状态")]),t._v(" "),s("li",[t._v("必须设置"),s("code",[t._v("tableview")]),t._v("编辑状态的风格")]),t._v(" "),s("li",[t._v("更改"),s("code",[t._v("commitEditingStyle")]),t._v("方法，如果是编辑状态则编辑")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 新增操作,按钮点击")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IBAction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("addDataBtn"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("sender "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 必须让tableview处于编辑状态")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tabelView setEditing"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("YES"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 新增操作也需要实现几个方法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 也必须实现 canEditRowAtIndexPath 且返回YES")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BOOL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("tableView"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableView")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("tableView canEditRowAtIndexPath"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSIndexPath")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("indexPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" YES"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. 必须设置tableview编辑状态的风格")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableViewCellEditingStyle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("tableView"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableView")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("tableView editingStyleForRowAtIndexPath"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSIndexPath")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("indexPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    默认情况下，是删除，如果是编辑则需要返回UITableViewCellEditingStyleInsert")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableViewCellEditingStyleInsert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4. 更改commitEditingStyle方法，如果是编辑状态则编辑(此处综合了删除的情况)")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("tableView"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableView")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("tableView commitEditingStyle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableViewCellEditingStyle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("editingStyle forRowAtIndexPath"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSIndexPath")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("indexPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("editingStyle "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableViewCellEditingStyleInsert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 数据源中加")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data insertObject"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"新增加的"')]),t._v(" atIndex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("indexPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("row"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 视图中需要更新 reloadData是刷新整个表格，但是reloadData的性能不好，会全部重新刷新。")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [self.tabelView reloadData];")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果只是删除和增加一行，tableview有对应的方法")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tableView insertRowsAtIndexPaths"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("indexPath "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" withRowAnimation"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableViewRowAnimationFade")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("editingStyle "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableViewCellEditingStyleDelete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    以下两个语句不能换顺序，必须先删除数据源中的数据，再删除本行的数据")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    删除对应数据源中的方法")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data removeObjectAtIndex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" indexPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("row"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    删除界面上的，对应一行")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tableView deleteRowsAtIndexPaths"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" @"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("indexPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" withRowAnimation"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableViewRowAnimationFade")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"_5-表格移动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-表格移动"}},[t._v("#")]),t._v(" 5. 表格移动")]),t._v(" "),s("p",[s("img",{attrs:{src:n(171),alt:""}})]),t._v(" "),s("p",[t._v("要想表格可以被移动，需要实现如下方法：")]),t._v(" "),s("ol",[s("li",[t._v("也必须实现 "),s("code",[t._v("canEditRowAtIndexPath")]),t._v(" 且返回 YES，表示该行可以被编辑")]),t._v(" "),s("li",[t._v("设置"),s("code",[t._v("canMoveRowAtIndexPath")]),t._v("可移动")]),t._v(" "),s("li",[t._v("更新移动之后的数据源"),s("code",[t._v("moveRowAtIndexPath")]),t._v("和"),s("code",[t._v("toIndexPath")])])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 移动功能")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 让列表处于可编辑状态， canEditRowAtIndexPath 且返回YES")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 设置可以移动")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BOOL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("tableView"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableView")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("tableView canMoveRowAtIndexPath"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSIndexPath")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("indexPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" YES"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. 设置移动index和目标Index；并更改数据源的index数据")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("tableView"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableView")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("tableView moveRowAtIndexPath"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSIndexPath")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("sourceIndexPath toIndexPath"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSIndexPath")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("destinationIndexPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 移除需要移动的Cell")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSString")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("cell "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("sourceIndexPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("row"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data removeObjectAtIndex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("sourceIndexPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("row"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将数据添加到指定位置")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data insertObject"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("cell atIndex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("destinationIndexPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("row"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"_6-tableview-分组索引展示"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-tableview-分组索引展示"}},[t._v("#")]),t._v(" 6. TableView 分组索引展示")]),t._v(" "),s("p",[s("img",{attrs:{src:n(216),alt:""}})]),t._v(" "),s("p",[t._v("要实现分类+索引展示，需要在原有基础展示的情况下实现如下几个方法：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("numberOfSectionsInTableView")]),t._v(" 设置"),s("code",[t._v("TableView")]),t._v("展示多少组；前面基础知识已经讲到一个"),s("code",[t._v("TableView")]),t._v("是包含多组，一组又包含多行的；此处由于案例是展示一个列表，所以下方的代码返回的是 1;")]),t._v(" "),s("li",[s("code",[t._v("numberOfRowsInSection")]),t._v("设置"),s("code",[t._v("TableView")]),t._v("展示多少行")]),t._v(" "),s("li",[s("code",[t._v("cellForRowAtIndexPath")]),t._v(" 设置每一行展示的内容是什么，每一行展示的内容其实包裹在 TableViewCell 中的 ContentView 中")]),t._v(" "),s("li",[s("code",[t._v("titleForHeaderInSection")]),t._v("设置每一分类的内容")]),t._v(" "),s("li",[s("code",[t._v("sectionIndexTitlesForTableView")]),t._v("设置右侧索引内容")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("\n#"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ViewController.h"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ViewController")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableViewDelegate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableViewDataSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所有分类的数组")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@property")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strong"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("nonatomic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSArray")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("_sectionTitles"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 内容数组")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@property")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strong"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("nonatomic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSArray")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSArray")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("contentArray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@end")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@implementation")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ViewController")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("viewDidLoad "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),t._v(" viewDidLoad"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Do any additional setup after loading the view.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    初始化分类数组的数据")]),t._v("\n    self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_sectionTitles  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSArray")]),t._v(" alloc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" initWithObjects"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n                            @"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"F"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"G"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"H"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"M"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"S"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"T"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"X"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Z"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nil"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    初始化具体内容的数据")]),t._v("\n    self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("contentArray  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSArray")]),t._v(" alloc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" initWithObjects"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n                          @"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"阿伟"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"阿姨"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"阿三"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                          @"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"蔡芯"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"成龙"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"陈鑫"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"陈丹"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"成名"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                          @"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"芳仔"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"房祖名"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"方大同"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"芳芳"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"范伟"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                          @"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"郭靖"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"郭美美"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"过儿"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"过山车"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                          @"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"何仙姑"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"和珅"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"郝歌"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"好人"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                          @"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"妈妈"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"毛不易"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                          @"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"孙周"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"沈冰"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"婶婶"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                          @"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"涛涛"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"淘宝"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"套娃"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                          @"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"小二"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"夏紫薇"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"许巍"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"许晴"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                          @"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"周扒皮"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"周杰伦"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张柏芝"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张大仙"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("nil"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置一共有多少哥分组")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSInteger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("numberOfSectionsInTableView"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableView")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("tableView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_sectionTitles"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置每一个分组对应有多少行")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSInteger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("tableView"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableView")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("tableView numberOfRowsInSection"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSInteger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("section"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("contentArray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("section"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回每一行的数据")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableViewCell")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("tableView"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableView")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("tableView cellForRowAtIndexPath"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSIndexPath")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("indexPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableViewCell")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("cell "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tableView dequeueReusableCellWithIdentifier"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    cell"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("textLabel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("contentArray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("indexPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("section"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("indexPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("row"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" cell"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回每一个分类的具体内容")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSString")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("tableView"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableView")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("tableView titleForHeaderInSection"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSInteger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("section"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("  self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_sectionTitles"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("section"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置右侧索引")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSArray")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSString")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("sectionIndexTitlesForTableView"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableView")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("tableView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_sectionTitles"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 右侧索引的点击事件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSInteger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("tableView"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UITableView")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("tableView sectionForSectionIndexTitle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSString")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("title atIndex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSInteger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSLog")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"您点击的索引是: %@"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    一定要返回Index,不然不会自动滑动到指定位置")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@end")]),t._v("\n\n")])])]),s("h2",{attrs:{id:"三、tableview-高级属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、tableview-高级属性"}},[t._v("#")]),t._v(" 三、TableView 高级属性")]),t._v(" "),s("h3",{attrs:{id:"_1-自定义每行cell"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-自定义每行cell"}},[t._v("#")]),t._v(" 1. 自定义每行Cell")]),t._v(" "),s("p",[t._v("之前介绍的 UITabelView 都是基于其自带的样式进行展示，真实的情况下，列表的展示其实是复杂的；下面我们就逐个来实现如何自定义 Cell;")]),t._v(" "),s("p",[t._v("先查看效果图: "),s("img",{attrs:{src:n(172),alt:""}})]),t._v(" "),s("p",[t._v("其实自定义 Cell 的步骤和普通展示的情况是一样的，只是在实现每一行 Cell 具体展示的内容需要我们自定义。")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("numberOfSectionsInTableView")]),t._v(" 设置"),s("code",[t._v("TableView")]),t._v("展示多少组；前面基础知识已经讲到一个"),s("code",[t._v("TableView")]),t._v("是包含多组，一组又包含多行的；此处由于案例是展示一个列表，所以下方的代码返回的是 1;")]),t._v(" "),s("li",[s("code",[t._v("numberOfRowsInSection")]),t._v("设置"),s("code",[t._v("TableView")]),t._v("展示多少行")]),t._v(" "),s("li",[s("code",[t._v("cellForRowAtIndexPath")]),t._v(" 设置每一行展示的内容是什么，每一行展示的内容其实包裹在 TableViewCell 中的 ContentView 中；此处我们将自定义 Cell。")])]),t._v(" "),s("p",[s("strong",[t._v("第一步：创建每一行内容")])]),t._v(" "),s("ul",[s("li",[t._v("在 storyboard 中拖拽一个 Tableview 并设置其 Content 为 Dynamic Prototypes;")]),t._v(" "),s("li",[t._v("为了能及时查看出效果，将下面的 Prototypes Cell 设置为 1；")]),t._v(" "),s("li",[t._v("拖动一个 ImageView 和多个 Label 布局好 Cell;")]),t._v(" "),s("li",[t._v("设置每一个 Cell 的 Identifier 为 abc；")])]),t._v(" "),s("p",[s("img",{attrs:{src:n(217),alt:""}})]),t._v(" "),s("p",[s("strong",[t._v("第二步：创建自定义 Cell")])]),t._v(" "),s("ul",[s("li",[t._v("右键创建一个新的"),s("code",[t._v("Cocoa Touch Class")]),t._v(" 并命名为"),s("code",[t._v("WechatTableViewCell")])]),t._v(" "),s("li",[t._v("将 StoryBoard 中的 UIImageView 和多个 Label 分别拖动到"),s("code",[t._v("WechatTableViewCell.h")]),t._v("文件中")])]),t._v(" "),s("blockquote",[s("p",[t._v("为什么要放在.h 文件中？属性在.h 文件中和在.m 中声明是有区别的。区别就是："),s("strong",[t._v("在.h 文件中声明的属性，外部类可以通过“类实例。属性”来调用，但在.m 中声明的则不可以，获取和设置的方法，只能是通过 setValue:forKey 和 valueForKey 来实现")])])]),t._v(" "),s("blockquote",[s("p",[t._v("补充："),s("strong",[t._v("写在.m 文件中时，相当于是@private 权限，子类无法访问；而写在.h 文件中，默认是@protected 权限，子类可以访问，可以做权限修改")])])]),t._v(" "),s("div",{staticClass:"language-objc extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("#import <UIKit/UIKit.h>\nNS_ASSUME_NONNULL_BEGIN\n@interface WechatTableViewCell : UITableViewCell\n@property (weak, nonatomic) IBOutlet UILabel *title;\n@property (weak, nonatomic) IBOutlet UILabel *time;\n@property (weak, nonatomic) IBOutlet UILabel *content;\n@property (weak, nonatomic) IBOutlet UIImageView *pic;\n@end\n\nNS_ASSUME_NONNULL_END\n")])])]),s("p",[s("strong",[t._v("第三步：编写自定义 Cell")])]),t._v(" "),s("div",{staticClass:"language-objc extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('\n#import "ViewController.h"\n#import "WeChatTableViewCell.h"\n\n@interface ViewController ()<UITableViewDataSource, UITableViewDelegate>\n\n\n@property(nonatomic, strong) NSArray *pics;\n@property(nonatomic, strong) NSArray *titles;\n@property(nonatomic, strong) NSArray *times;\n@property(nonatomic, strong) NSArray *contents;\n@property (weak, nonatomic) IBOutlet UITableView *tableView;\n@end\n\n@implementation ViewController\n// 以下的数据定义为懒加载模式，详情可见TableView其他知识中的数据懒加载\n\n- (NSArray *)pics{\n    if(_pics == nil){\n        _pics=@[@"add_friend_icon_addgroup_36x36_",@"Contact_icon_ContactTag_36x36_",@"plugins_FriendNotify_36x36_",@"Plugins_WeSport_36x36_",@"ReadVerified_icon_36x36_"];\n    }\n    return _pics;\n}\n\n- (NSArray *)titles{\n    if(_titles ==nil){\n        _titles=@[@"小龙女哀悼金庸", @"坠江公交黑匣子",@"新iPad发布",@"金庸去世", @"苹果发布会"];\n    }\n    return _titles;\n}\n\n- (NSArray *)times{\n    if(_times == nil){\n        _times=@[@"10:12", @"10:15", @"10:20", @"10:50", @"11:00"];\n    }\n    return _times;\n}\n\n- (NSArray *)contents{\n    if(_contents ==nil){\n        _contents=@[@"小龙女哀悼金庸:他笔下的小龙女给予我一切一切", @"重庆坠江公交车黑匣子打捞出水 已交公安部门", @"新iPad发布 苹果10月发布会发布三款新品", @"94岁金庸去世 网友明星悼念:他带着武侠梦睡着了", @"苹果于10月30号晚上22点召开新品发布会"];\n    }\n    return  _contents;\n}\n\n- (void)viewDidLoad {\n    [super viewDidLoad];\n    // Do any additional setup after loading the view, typically from a nib.\n\n    self.tableView.delegate=self;\n    self.tableView.dataSource=self;\n}\n\n// 这里的demo只有一行\n-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{\n    return 1;\n}\n\n// 每一个分类下有多少行\n-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{\n    return self.titles.count;\n}\n// 每一行具体的内容\n-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{\n    // 为每一行填充内容\n    WechatTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"abc"];\n    cell.pic.image=[UIImage imageNamed: [self.pics objectAtIndex:indexPath.row]];\n    cell.time.text= self.times[indexPath.row];\n    cell.content.text=self.contents[indexPath.row];\n    cell.title.text=self.titles[indexPath.row];\n\n    return cell;\n}\n// 记得设置每一行的高度\n- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{\n    return 100;\n}\n@end\n\n')])])]),s("h3",{attrs:{id:"_2-使用-mvc-设计模式改造自定义-cell"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用-mvc-设计模式改造自定义-cell"}},[t._v("#")]),t._v(" 2. 使用 MVC 设计模式改造自定义 Cell")]),t._v(" "),s("p",[t._v("众所周知，MVC 设计模式中的:")]),t._v(" "),s("ul",[s("li",[t._v("M(Model): 主要负责数据的存储以及如何操作数据；")]),t._v(" "),s("li",[t._v("V(View): 主要负责视图的展示")]),t._v(" "),s("li",[t._v("C(Controller): 是 Model 对象与 View 对象的中间人，负责传递数据，监听各种事件，管理其他对象的生命周期等。")])]),t._v(" "),s("p",[t._v("上面自定义 Cell 中大量的数据冗余在 Controller 中，我们需要按照其不同的职责去分别处理不同的工作。")]),t._v(" "),s("p",[s("strong",[t._v("第一步：设计 Model")])]),t._v(" "),s("blockquote",[s("p",[t._v("列表中的每一行对应的数据可以抽象成一个 Model: WeChatModel;分别拥有如下属性；并且我们提供了 一个方法让外界可以通过 getModels 的方式获取到所有的 Model。(tips: .h 文件中定义的属性和方法外界才能访问)")])]),t._v(" "),s("div",{staticClass:"language-objc extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("//\n//  WeChatModel.h\n//  TableView自定义\n//\n#import <Foundation/Foundation.h>\n\nNS_ASSUME_NONNULL_BEGIN\n\n@interface WeChatModel : NSObject\n\n@property(nonatomic,copy) NSString *picName;\n@property(nonatomic,copy) NSString *titleText;\n@property(nonatomic,copy) NSString *timeText;\n@property(nonatomic,copy) NSString *contentText;\n\n- (NSMutableArray *) getModels;\n@end\n\nNS_ASSUME_NONNULL_END\n\n")])])]),s("p",[t._v("上面已经讲到 "),s("code",[t._v("Model")]),t._v(" 的功能是输出的存储和如何操作数据，所有我们把之前放在 "),s("code",[t._v("ViewController")]),t._v(" 中的数据，放在"),s("code",[t._v("WeChatModel.m")]),t._v("文件中去实现，且不让外界可以访问得到;")]),t._v(" "),s("p",[t._v("其次我们需要初始化一个model数组，以供外界通过.h文件中的getModels可以访问到。")]),t._v(" "),s("div",{staticClass:"language-objc extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('//\n//  WeChatModel.m\n//  TableView自定义\n#import "WeChatModel.h"\n\n@interface WeChatModel()\n@property(nonatomic, strong) NSArray *pics;\n@property(nonatomic, strong) NSArray *titles;\n@property(nonatomic, strong) NSArray *times;\n@property(nonatomic, strong) NSArray *contents;\n// 一个WeChatModel数组，存储列表的数据源\n@property (nonatomic,strong) NSMutableArray<WeChatModel *> *wechats;\n\n@end\n\n@implementation WeChatModel\n// 实现getModels，将所有的模型数据返回\n- (NSMutableArray *)getModels{\n    return self.wechats;\n}\n\n- (NSArray<WeChatModel *> *)wechats{\n    if(_wechats == nil){\n        // 如果为空，则构造一个空的可变数组，并依次添加数据\n        _wechats = [NSMutableArray array];\n        for (int i=0; i<self.titles.count; i++) {\n            WeChatModel *model = [[WeChatModel alloc] init];\n            model.picName=self.pics[i];\n            model.contentText=self.contents[i];\n            model.timeText=self.times[i];\n            model.titleText=self.titles[i];\n            [_wechats addObject:model];\n        }\n    }\n    return _wechats;\n}\n\n- (NSArray *)pics{\n    if(_pics == nil){\n        _pics=@[@"add_friend_icon_addgroup_36x36_",@"Contact_icon_ContactTag_36x36_",@"plugins_FriendNotify_36x36_",@"Plugins_WeSport_36x36_",@"ReadVerified_icon_36x36_"];\n    }\n    return _pics;\n}\n\n- (NSArray *)titles{\n    if(_titles ==nil){\n        _titles=@[@"小龙女哀悼金庸", @"坠江公交黑匣子",@"新iPad发布",@"金庸去世", @"苹果发布会"];\n    }\n    return _titles;\n}\n\n- (NSArray *)times{\n    if(_times == nil){\n        _times=@[@"10:12", @"10:15", @"10:20", @"10:50", @"11:00"];\n    }\n    return _times;\n}\n\n- (NSArray *)contents{\n    if(_contents ==nil){\n        _contents=@[@"小龙女哀悼金庸:他笔下的小龙女给予我一切一切", @"重庆坠江公交车黑匣子打捞出水 已交公安部门", @"新iPad发布 苹果10月发布会发布三款新品", @"94岁金庸去世 网友明星悼念:他带着武侠梦睡着了", @"苹果于10月30号晚上22点召开新品发布会"];\n    }\n    return  _contents;\n}\n\n@end\n')])])]),s("p",[s("strong",[t._v("第二步：给自定义的WechatTableViewCell，提供数据")])]),t._v(" "),s("p",[t._v("之前展示的方式是在controller中挨个编写，但是现在我们需要将Cell和对应的Model绑定；")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("WechatTableViewCell 给外界提供一个设置数据源的方法")])])]),t._v(" "),s("div",{staticClass:"language-objc extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('//  WechatTableViewCell.h\n#import <UIKit/UIKit.h>\n#import "WeChatModel.h"\nNS_ASSUME_NONNULL_BEGIN\n\n@interface WechatTableViewCell : UITableViewCell\n@property (weak, nonatomic) IBOutlet UILabel *title;\n@property (weak, nonatomic) IBOutlet UILabel *time;\n@property (weak, nonatomic) IBOutlet UILabel *content;\n@property (weak, nonatomic) IBOutlet UIImageView *pic;\n\n- (void)configCell: (WeChatModel *) wechat;\n\n@end\n\nNS_ASSUME_NONNULL_END\n\n')])])]),s("ul",[s("li",[s("strong",[t._v("将组件和数据的绑定放在Cell中")])])]),t._v(" "),s("div",{staticClass:"language-objc extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('//\n//  WechatTableViewCell.m\n//\n\n#import "WechatTableViewCell.h"\n#import "WeChatModel.h"\n@implementation WechatTableViewCell\n// 数据的绑定，放在Cell中\n- (void)configCell:(WeChatModel *)wechat{\n\n    self.pic.image=[UIImage imageNamed: wechat.picName];\n    self.time.text= wechat.timeText;\n    self.content.text=wechat.contentText;\n    self.title.text=wechat.titleText;\n}\n\n- (void)awakeFromNib {\n    [super awakeFromNib];\n    // Initialization code\n}\n\n- (void)setSelected:(BOOL)selected animated:(BOOL)animated {\n    [super setSelected:selected animated:animated];\n    \n    // Configure the view for the selected state\n}\n\n@end\n\n')])])]),s("ul",[s("li",[s("code",[t._v("ViewController")]),t._v(" 负责处理各种 "),s("code",[t._v("TableView")]),t._v(" 的事件；并渲染列表")])]),t._v(" "),s("div",{staticClass:"language-objc extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('// ViewController.m\n\n#import "ViewController.h"\n#import "WeChatTableViewCell.h"\n#import "WeChatModel.h"\n@interface ViewController ()<UITableViewDataSource, UITableViewDelegate>\n@property (nonatomic,strong) NSMutableArray<WeChatModel *> *wechats;\n@property (weak, nonatomic) IBOutlet UITableView *tableView;\n@end\n\n@implementation ViewController\n\n- (void)viewDidLoad {\n    [super viewDidLoad];\n    // Do any additional setup after loading the view, typically from a nib.\n    \n    self.tableView.delegate=self;\n    self.tableView.dataSource=self;\n    // 获取所有的模型数据\n    self.wechats= [[[WeChatModel alloc]init] getModels];\n}\n\n// 这里的demo只有一行\n-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{\n    \n    return 1;\n}\n\n// 每一哥分类下有多少行\n-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{\n    \n    \n    return self.wechats.count;\n    \n}\n// 每一行具体的内容\n-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{\n    \n    WechatTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"abc"];\n    // 给每一个Cell设置模型数据即可\n    [cell configCell: self.wechats[indexPath.row]];\n    return cell;\n}\n\n- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{\n    return 100;\n}\n// 移除多余的空白行\n- (UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section{\n    return [[UIView alloc]init];\n}\n@end\n\n')])])]),s("p",[t._v("效果图和原来一致：")]),t._v(" "),s("p",[s("img",{attrs:{src:n(172),alt:""}})]),t._v(" "),s("h2",{attrs:{id:"四、tableview-其他知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、tableview-其他知识"}},[t._v("#")]),t._v(" 四、TableView 其他知识")]),t._v(" "),s("h3",{attrs:{id:"_1-数据懒加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-数据懒加载"}},[t._v("#")]),t._v(" 1. 数据懒加载")]),t._v(" "),s("p",[t._v("以上的例子数据都是在 viewDidLoad 中直接同步创建的；如果数据很大难以避免会耗时比较长，此时就需要使用到数据的懒加载。")]),t._v(" "),s("blockquote",[s("p",[t._v("数据的懒加载其实就是实现属性的 get 方法。")])]),t._v(" "),s("p",[t._v("举个例子，按照上面的索引实现中的"),s("code",[t._v("contentArray")]),t._v("之前是在 viewDidLoad 中设置的，现在"),s("code",[t._v("@implementation")]),t._v("中实现"),s("code",[t._v("contentArray")]),t._v("；表示在使用的时候才去初始化。")]),t._v(" "),s("p",[s("strong",[t._v("注意点")])]),t._v(" "),s("blockquote",[s("p",[t._v("使用懒加载这种方式，在后续使用的时候请使用 self.contentArray 的方式，而不要使用下划线 _contentArray 的方式。")])]),t._v(" "),s("p",[s("strong",[t._v("Tips: self.和下划线访问的区别")])]),t._v(" "),s("blockquote",[s("p",[t._v("通过 self.xxx 的访问调用了方法：包含了 set 和 get 方法。而通过下划线的访问是获取自己的实例变量，不包含 set 和 get 的方法")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@implementation")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ViewController")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重新contentArray的get方法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSArray")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSArray")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("contentArray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_contentArray "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" nil"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        _contentArray"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSArray")]),t._v(" alloc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" initWithObjects"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        @"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"阿伟"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"阿姨"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"阿三"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        @"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"蔡芯"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"成龙"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"陈鑫"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"陈丹"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"成名"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        @"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"芳仔"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"房祖名"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"方大同"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"芳芳"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"范伟"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        @"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"郭靖"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"郭美美"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"过儿"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"过山车"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        @"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"何仙姑"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"和珅"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"郝歌"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"好人"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        @"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"妈妈"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"毛不易"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        @"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"孙周"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"沈冰"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"婶婶"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        @"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"涛涛"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"淘宝"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"套娃"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        @"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"小二"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"夏紫薇"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"许巍"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"许晴"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        @"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"周扒皮"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"周杰伦"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张柏芝"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张大仙"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("nil"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" _contentArray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSArray")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("_sectionTitles"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__sectionTitles "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" nil"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        __sectionTitles"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NSArray")]),t._v(" alloc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" initWithObjects"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        @"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"F"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"G"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"H"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"M"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"S"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"T"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"X"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("@"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Z"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nil"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" __sectionTitles"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("viewDidLoad "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),t._v(" viewDidLoad"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Do any additional setup after loading the view.")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ....其他代码")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@end")]),t._v("\n")])])]),s("p",[s("strong",[t._v("参考")])]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://ke.qq.com/webcourse/index.html#cid=1583910&term_id=101682609&taid=7928380780981030&vid=5285890788197354936",target:"_blank",rel:"noopener noreferrer"}},[t._v("IOS12+Objective-C+Xcode 基础教程"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=e.exports}}]);